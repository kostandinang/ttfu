swagger: '2.0'

# Api Info
info:
  version: "1.0.0"
  title: TTFU
  description: "TeamTheFuckUp"
host: localhost:3000
basePath: /api/v1
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json

# Security
securityDefinitions:
  Token:
    type: apiKey
    name: Authorization
    in: header

# Paths
paths:
  /fblogin:
    post:
      parameters:
        - name: fb_token
          in: query
          type: string
          required: true
      responses:
        200:
          description:  Facebook Authentication OK
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/FBLogin'
        401:
          description:  Facebook Authentication !OK
          schema:
            $ref: "#/definitions/Error"

  /user/{user_id}/:
    get:
      description: Register user device
      security:
        - Token: []
      parameters:
        - name: user_id
          in: path
          type: string
          required: true
      responses:
        200:
          description:  User Device registered
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/User'
                
  /user/device:
    post:
      description: Register user device
      security:
        - Token: []
      parameters:
        - name: device_id
          in: formData
          type: string
          required: true
      responses:
        200:
          description:  User Device registered
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/UserDevice'
    delete:
      description: Unregister user device
      security:
        - Token: []
      parameters:
        - name: device_id
          in: formData
          type: string
          required: true
      responses:
        200:
          description:  User Device unregistered
          schema:
            $ref:   '#/definitions/UserDevice'

  /match:
    get:
      description: Get matches
      security:
        - Token: []
      parameters:
        - name: from
          in: query
          type: string
          format: date
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/Match"
    post:
      description:  Create a match
      security:
        - Token: []
      parameters:
        - name: due_date
          in: formData
          type: string
          format: date
          required: true
        - name: location
          in: formData
          type: string
          required: true
        - name: lat
          in: formData
          type: number
          required: false
        - name: lng
          in: formData
          type: number
          required: false
        - name: max_players
          in: formData
          type: integer
          required: true
        - name: min_players
          in: formData
          type: number
          required: true
        - name: team1_name
          in: formData
          type: string
          required: true
        - name: team2_name
          in: formData
          type: string
          required: true
        - name: team1_color_hex
          in: formData
          type: string
          required: false
        - name: team2_color_hex
          in: formData
          type: string
          required: false
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/Match"

  /match/{match_id}/:
    get:
      description: Get a match
      security:
        - Token: []
      parameters:
        - name: match_id
          in: path
          type: integer
          required: true
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/Match"
    put:
      description:  Update a match
      security:
        - Token: []
      parameters:
        - name: match_id
          in: path
          type: integer
          required: true
        - name: due_date
          in: formData
          type: string
          format: date
          required: true
        - name: location
          in: formData
          type: string
          required: true
        - name: lat
          in: formData
          type: number
          required: false
        - name: lng
          in: formData
          type: number
          required: false
        - name: max_players
          in: formData
          type: integer
          required: true
        - name: min_players
          in: formData
          type: number
          required: true
        - name: team1_name
          in: formData
          type: string
          required: true
        - name: team2_name
          in: formData
          type: string
          required: true
        - name: team1_color_hex
          in: formData
          type: string
          required: false
        - name: team2_color_hex
          in: formData
          type: string
          required: false
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/Match"
    delete:
      description: Delete a match
      security:
        - Token: []
      parameters:
        - name: match_id
          in: path
          type: integer
          required: true
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/Match"

  /member:
    put:
      description: Update team member
      security:
        - Token: []
      parameters:
        - name: match_id
          in: query
          type: integer
          required: true
        - name: team_id
          in: query
          type: integer
          required: false
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/TeamMember"
    delete:
      description: Remove a member from team
      security:
        - Token: []
      parameters:
        - name: match_id
          in: query
          type: integer
          required: true
        - name: action
          in: query
          type: string
          enum:
            - cancel
            - remove_from_team
          required: true
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              data:
                $ref: "#/definitions/TeamMember"


# Definitions
definitions:
  FBLogin:
    type: object
    properties:
      token:
        type: string

  Error:
    type: object
    properties:
          statusCode:
            type: integer
          error:
            type: string
          message:
            type: string

  User:
    type: object
    properties:
      user_id:
        type: integer
      username:
        type: string
      first_name:
        type: string
      email:
        type: string
      photo_url:
        type: string
      fb_id:
        type: string  
      is_admin:
        type: boolean
  
  
  UserDevice:
    type: object
    properties:
      user_id:
        type: integer
      device_id:
        type: string
      created_at:
        type: string
        format: date-time
      active:
        type: boolean

  Team:
    type: object
    properties:
      team_id:
        type: integer
      name:
        type: string
      color_hex:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      score:
        format: integer
      members:
        type: array
        items:
          $ref: "#/definitions/PublicUser"

  Match:
    type: object
    properties:
      description:
        type: string
      due_date:
        type: string
        format: date-time
      location:
        type: string
      lat:
        type: number
      lng:
        type: number
      max_players:
        type: integer
      min_players:
        type: integer
      teams:
        type: array
        items:
          $ref: "#/definitions/Team"
      deleted_at:
        type: string
        format: date-time

  TeamMember:
    type: object
    properties:
      match_id:
        type: integer
      team_id:
        type: integer
      members:
        type: array
        items:
          $ref: "#/definitions/PublicUser"

  PublicUser:
    type: object
    properties:
      user_id:
        type: integer
      user_name:
        type: string
      first_name:
        type: string
      last_name:
        type: string